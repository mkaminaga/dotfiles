" Plugin settings for .vimrc.
" Author  Mamoru Kaminaga
" Since 2021
"
" Factorization of vimrc plugins.
" Plugins are loaded from UNIX like terminals.
"

" EasyMotion auto installation.
" See also
" https://qiita.com/kawaz/items/ee725f6214f91337b42b

"dein Scripts-----------------------------
if &compatible
  set nocompatible               " Be iMproved
endif
let s:cache_home=empty($XDG_CACHE_HOME) ? expand('~/.cache') : $XDG_CACHE_HOME
let s:dein_dir=s:cache_home . '/dein'
let s:dein_repo_dir=s:dein_dir . '/repos/github.com/Shougo/dein.vim'
if !isdirectory(s:dein_repo_dir)
  call system('git clone https://github.com/Shougo/dein.vim ' . shellescape(s:dein_repo_dir))
endif
let &runtimepath=&runtimepath .",". s:dein_repo_dir

" Add the dein installation directory into runtimepath.
if dein#load_state(s:dein_dir)
  call dein#begin(s:dein_dir)

  " For dein itself.
  call dein#add(s:dein_repo_dir)

  " For the improvement of visual.
  call dein#add('tomasr/molokai')
  call dein#add('itchyny/lightline.vim')

  " For the improvement of editing experience.
  call dein#add('tomtom/tcomment_vim')
  call dein#add('easymotion/vim-easymotion')
  call dein#add('jiangmiao/auto-pairs')
  call dein#add('tpope/vim-surround')
  call dein#add('tpope/vim-repeat')

  " for C/C++ code formatting.
  call dein#add('rhysd/vim-clang-format')
  call dein#add('kana/vim-operator-user')

  call dein#end()
  call dein#save_state()
endif

if has('vim_starting') && dein#check_install()
  let g:dein#auto_recache = 1

  call dein#install()
  call map(dein#check_clean(), "delete(v:val, 'rf')")
endif

"End dein Scripts-------------------------

" Motion plugin.
" easymotion/vim-easymotion
let g:EasyMotion_do_mapping=1
let g:EasyMotion_leader_key="\<Leader>"
let g:EasyMotion_keys='asdfghjklgyuiopqwertnmzxcvb,./\@:[]'
let g:EasyMotion_smartcase=1
map <Leader> <Plug>(easymotion-prefix)
map sf <Plug>(easymotion-f)
map sF <Plug>(easymotion-F)
map st <Plug>(easymotion-t)
map sT <Plug>(easymotion-T)
map sw <Plug>(easymotion-w)
map sW <Plug>(easymotion-W)
map sb <Plug>(easymotion-b)
map sB <Plug>(easymotion-B)
map se <Plug>(easymotion-e)
map sE <Plug>(easymotion-E)
map sge <Plug>(easymotion-g)
map sgE <Plug>(easymotion-g)
map sj <Plug>(easymotion-j)
map sk <Plug>(easymotion-k)
map sn <Plug>(easymotion-n)
map sN <Plug>(easymotion-N)
map ss <Plug>(easymotion-s)

" Formatter plugin.
" rhysd/vim-clang-format
" kana/vim-operator-user
"
" Dependencies:
" C/C++ http://releases.llvm.org/download.html
let g:clang_format#code_style="google"
let g:clang_format#style_options = {
      \ "Standard" : "C++11"}
augroup ClangFormatSettings
  autocmd!
  autocmd FileType c,cpp,objc nnoremap <buffer><Leader>f :ClangFormat<CR>
  autocmd FileType c,cpp,objc vnoremap <buffer><Leader>f :ClangFormat<CR>
augroup END

" Code formatter
nnoremap <Space>f :ClangFormat<CR>

